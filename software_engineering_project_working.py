# -*- coding: utf-8 -*-
"""Software_Engineering_Project_Working.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cIZ7r4rUlS6faYl_h2vrvq4SJ92jD3Wi
"""

import pandas as pd
import numpy as np
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import CountVectorizer

from google.colab import files
uploaded = files.upload()

df = pd.read_csv('IMDB-Movie-Data.csv')
df.head(10)

df.shape

columns = ['Actors','Director','Genre','Title']

df[columns].head(10)

df[columns].isnull().values.any()

def get_important_features(data):
  important_features = []
  for i in range(0, data.shape[0]):
    important_features.append(data['Actors'][i]+''+data['Director'][i]+''+data['Genre'][i]+''+data['Title'][i])

  return important_features

df['important_features'] = get_important_features(df)
df.head(10)

cm = CountVectorizer().fit_transform(df['important_features'])

cs = cosine_similarity(cm)
print(cs)

cs.shape

title = 'Guardians of the Galaxy'

df['Movie_id'] = range(0,1000)
movie_id = df[df.Title == title]['Movie_id'].values[0]

scores = list(enumerate(cs[movie_id]))

sorted_scores = sorted(scores, key = lambda x:x[1], reverse = True)
sorted_scores = sorted_scores[1:]

print(sorted_scores)

# User rating and movie database
j = 0
print('The 10 most recommended movies to', title, 'are:\n')
for item in sorted_scores:

  movie_title = df[df.Movie_id == item[0]]['Title'].values[0]
  #movie_director = df[df.Movie_id == item[0]]['Director'].values[0]
  #movie_genre = df[df.Movie_id == item[0]]['Genre'].values[0]

  print(j+1, movie_title)
  j = j+1
  if j > 9:
    break